name: Get and Cache Dependencies
description: Get the Dependencies via npm and cache them
inputs:
  cache:
    description: "let use this action whether need to cache or not"
    required: 'false'
    default: 'true'
outputs:
  cache-output:
    description: 'Whether cache is used.'
    # required: 'false'
    value: ${{ steps.install.outputs.cache}}

runs:
  using: 'composite'       # other two types of actions 'javascipt' and 'docker'
  steps:
    - name: Cache dependencies
      if: inputs.cache == 'true'
      id: cache
      uses: actions/cache@v4
      with:
        path: node_modules
        key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
    - name: Install dependencies
      id: install
      if: steps.cache.outputs.cache-hit != 'true' || inputs.cache != 'true'
      run: | 
        npm ci
        # echo " cache='${{ inputs.cache}} >> GITHUB_OUTPUT'"
        echo "::set-output name=cache:: '${{inputs.cache}}'"
      shell: bash